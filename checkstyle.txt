Starting audit...
[ERROR] C:\cursuri\oop\proiect2\.\src\changepage\Back.java:4:8: Unused import - fileio.ActionInput. [UnusedImports]
[ERROR] C:\cursuri\oop\proiect2\.\src\changepage\Back.java:9:5: Class 'Back' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Back' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\ActionChangePage.java:43:35: 'page' hides a field. [HiddenField]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\ActionFactory.java:5:18: Using the '.*' form of import should be avoided - changepage.*. [AvoidStarImport]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\ActionFactory.java:8:16: Using the '.*' form of import should be avoided - features.*. [AvoidStarImport]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Database.java:14:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Database.java:18:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Database.java:18:28: Parameter feature should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Database.java:22:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Database.java:23:24: Parameter page should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Database.java:23:35: Parameter application should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Strategy\FilterStrategy.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Strategy\FilterStrategy.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Strategy\FilterStrategy.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\cursuri\oop\proiect2\.\src\command\Subscribe.java:7:44: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseAdd.java:15:5: Class 'DatabaseAdd' looks like designed for extension (can be subclassed), but the method 'getAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DatabaseAdd' final or making the method 'getAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseAdd.java:19:5: Class 'DatabaseAdd' looks like designed for extension (can be subclassed), but the method 'setAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DatabaseAdd' final or making the method 'setAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseAdd.java:19:31: Parameter addedMovie should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseAdd.java:23:5: Class 'DatabaseAdd' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DatabaseAdd' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseAdd.java:24:24: Parameter page should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseAdd.java:24:35: Parameter application should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseDelete.java:15:5: Class 'DatabaseDelete' looks like designed for extension (can be subclassed), but the method 'getDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DatabaseDelete' final or making the method 'getDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseDelete.java:19:5: Class 'DatabaseDelete' looks like designed for extension (can be subclassed), but the method 'setDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DatabaseDelete' final or making the method 'setDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseDelete.java:19:33: Parameter deletedMovie should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseDelete.java:23:5: Class 'DatabaseDelete' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DatabaseDelete' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseDelete.java:24:24: Parameter page should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\database\DatabaseDelete.java:24:35: Parameter application should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\fileio\ActionInput.java:3:8: Unused import - realistic.ActualMovie. [UnusedImports]
[ERROR] C:\cursuri\oop\proiect2\.\src\fileio\MovieInput.java:4:8: Unused import - java.util.Comparator. [UnusedImports]
[ERROR] C:\cursuri\oop\proiect2\.\src\fileio\MovieInput.java:122:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\fileio\MovieInput.java:127:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\Main.java:17:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\cursuri\oop\proiect2\.\src\Main.java:19:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\cursuri\oop\proiect2\.\src\Main.java:20:23: Variable 'i' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\cursuri\oop\proiect2\.\src\Main.java:65: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\MoviesPage.java:75:23: Parameter actionInput should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\MoviesPage.java:75:49: Parameter application should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:3:18: Using the '.*' form of import should be avoided - changepage.*. [AvoidStarImport]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:10:16: Using the '.*' form of import should be avoided - features.*. [AvoidStarImport]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:16:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:163:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:163:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:182:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:182:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:186:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:186:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:190:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:190:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:204: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:213:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:213:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:215: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\Page.java:220: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\SeeDetails.java:9:16: Using the '.*' form of import should be avoided - features.*. [AvoidStarImport]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\SeeDetails.java:84: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\SeeDetails.java:115: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\SeeDetails.java:140: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\SeeDetails.java:180: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\SeeDetails.java:207:23: Parameter actionInput should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\pages\SeeDetails.java:207:46: Parameter application should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ActualMovie.java:6:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ActualMovie.java:7:8: Unused import - java.util.Comparator. [UnusedImports]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ActualMovie.java:25: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ActualMovie.java:87:26: Parameter o should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ActualUser.java:9:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ActualUser.java:59:32: Parameter likedGenres should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ActualUser.java:67:37: Parameter subscribedGenres should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ActualUser.java:75:64: 'likedGenres' hides a field. [HiddenField]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\ErrorEntity.java:3:8: Unused import - command.Strategy.FilterStrategy. [UnusedImports]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\Notification.java:7:25: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\realistic\Notification.java:7:43: Parameter message should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\cursuri\oop\proiect2\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\cursuri\oop\proiect2\.\src\Test.java:158: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\cursuri\oop\proiect2\.\src\Test.java:206:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] C:\cursuri\oop\proiect2\.\src\Test.java:222: Line is longer than 100 characters (found 108). [LineLength]
Audit done.
Checkstyle ends with 76 errors.
